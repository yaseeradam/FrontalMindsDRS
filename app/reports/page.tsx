"use client";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { useEffect, useMemo, useState } from "react";
import { readStore } from "@/lib/storage";
import { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, LineChart, Line, CartesianGrid, PieChart, Pie, Cell } from "recharts";
import jsPDF from "jspdf";

const COLORS = ["#38bdf8","#22c55e","#a78bfa","#f59e0b","#f472b6"];

export default function ReportsPage() {
	const [cases, setCases] = useState<any[]>([]);
	const [arrests, setArrests] = useState<any[]>([]);
	const [patrols, setPatrols] = useState<any[]>([]);

	useEffect(() => {
		setCases(readStore("cases", []));
		setArrests(readStore("arrests", []));
		setPatrols(readStore("patrols", []));
	}, []);

	const crimeCounts = useMemo(() => {
		const map: Record<string, number> = {};
		for (const c of cases) map[c.crimeType] = (map[c.crimeType] || 0) + 1;
		return Object.entries(map).map(([name, value]) => ({ name, value }));
	}, [cases]);

	const arrestsTrend = useMemo(() => {
		const days = Array.from({ length: 7 }).map((_, i) => {
			const d = new Date();
			d.setDate(d.getDate() - (6 - i));
			return { day: d.toISOString().slice(5, 10), count: 0 };
		});
		for (const a of arrests) {
			const k = new Date(a.date).toISOString().slice(5, 10);
			const f = days.find((p) => p.day === k);
			if (f) f.count += 1;
		}
		return days;
	}, [arrests]);

	const patrolFreq = useMemo(() => {
		const map: Record<string, number> = {};
		for (const p of patrols) map[p.location] = (map[p.location] || 0) + 1;
		return Object.entries(map).map(([name, value]) => ({ name, value }));
	}, [patrols]);

	function exportPDF() {
		const doc = new jsPDF({ unit: "pt", format: "a4" });
		// Letterhead
		doc.setFillColor(11, 18, 32);
		doc.rect(0, 0, 595, 80, "F");
		doc.setTextColor(56, 189, 248);
		doc.setFontSize(18);
		doc.text("BRANIACS POLICE DRS", 36, 50);
		doc.setTextColor(255);
		doc.setFontSize(10);
		doc.text("Digital Records System â€” Weekly Summary", 36, 66);

		// Summary metrics
		doc.setTextColor(255);
		doc.setFontSize(12);
		doc.text(`Cases: ${cases.length}`, 36, 110);
		doc.text(`Arrests: ${arrests.length}`, 36, 126);
		doc.text(`Patrols: ${patrols.length}`, 36, 142);

		// Crime type breakdown
		let y = 170;
		doc.setFontSize(13);
		doc.text("Crime Types", 36, y);
		y += 14;
		doc.setFontSize(11);
		for (const { name, value } of crimeCounts) {
			doc.text(`${name}: ${value}`, 44, y);
			y += 14;
		}

		// Recent cases table (up to 5)
		y += 12;
		doc.setFontSize(13);
		doc.text("Recent Cases", 36, y);
		const recentCases = [...cases]
			.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())
			.slice(0, 5);
		y += 14;
		doc.setFontSize(10);
		doc.text("ID", 36, y);
		doc.text("Crime", 140, y);
		doc.text("Officer", 280, y);
		doc.text("Date", 440, y);
		y += 8;
		doc.setDrawColor(200);
		doc.line(36, y, 560, y);
		y += 12;
		for (const rc of recentCases) {
			doc.text(String(rc.id), 36, y);
			doc.text(String(rc.crimeType || "-"), 140, y);
			doc.text(String(rc.officer || "-"), 280, y);
			doc.text(new Date(rc.date).toLocaleDateString(), 440, y);
			y += 14;
		}

		// Arrest thumbnails (up to 5 with photos)
		y += 12;
		doc.setFontSize(13);
		doc.text("Arrest Thumbnails", 36, y);
		y += 10;
		const thumbs = arrests.filter((a) => !!a.photoBase64).slice(0, 5);
		let x = 36;
		for (const a of thumbs) {
			try {
				doc.addImage(a.photoBase64, "JPEG", x, y, 56, 56, undefined, "FAST");
			} catch {}
			x += 68;
		}

		// Footer
		doc.setDrawColor(56, 189, 248);
		doc.setLineWidth(0.5);
		doc.line(36, 800, 560, 800);
		doc.setFontSize(9);
		doc.setTextColor(200);
		doc.text("Generated by Braniacs Police DRS (Prototype)", 36, 816);

		doc.save("weekly-summary.pdf");
	}

	return (
		<div className="space-y-6">
			<div className="flex items-center justify-between">
				<div>
					<h1 className="text-2xl font-semibold tracking-wider text-sky-300">Reports</h1>
					<p className="text-white/60 text-sm">Auto-generated dashboard from local records</p>
				</div>
				<Button onClick={exportPDF}>Export PDF</Button>
			</div>
			<Card className="bg-white/5 border-white/10">
				<CardContent className="p-6">
					<div className="grid lg:grid-cols-3 gap-6">
						<div className="lg:col-span-1">
							<div className="text-sm text-white/60 mb-2">Crime Types</div>
							<div className="h-56">
								<ResponsiveContainer width="100%" height="100%">
									<PieChart>
										<Pie dataKey="value" data={crimeCounts} innerRadius={50} outerRadius={80}>
											{crimeCounts.map((_, i) => <Cell key={i} fill={COLORS[i % COLORS.length]} />)}
										</Pie>
									</PieChart>
								</ResponsiveContainer>
							</div>
						</div>
						<div className="lg:col-span-2">
							<div className="text-sm text-white/60 mb-2">Arrests (last 7 days)</div>
							<div className="h-56">
								<ResponsiveContainer width="100%" height="100%">
									<LineChart data={arrestsTrend} margin={{ top: 5, right: 10, left: 0, bottom: 0 }}>
										<CartesianGrid strokeDasharray="3 3" stroke="#2a2a2a" />
										<XAxis dataKey="day" stroke="#9ca3af" tick={{ fontSize: 12 }} />
										<YAxis allowDecimals={false} stroke="#9ca3af" tick={{ fontSize: 12 }} />
										<Tooltip contentStyle={{ background: "#0b1220", border: "1px solid rgba(255,255,255,0.1)", color: "white" }} />
										<Line type="monotone" dataKey="count" stroke="#38bdf8" strokeWidth={2} dot={{ r: 3 }} />
									</LineChart>
								</ResponsiveContainer>
							</div>
						</div>
					</div>
				</CardContent>
			</Card>
			<Card className="bg-white/5 border-white/10">
				<CardContent className="p-6">
					<div className="text-sm text-white/60 mb-2">Patrol Frequency</div>
					<div className="h-64">
						<ResponsiveContainer width="100%" height="100%">
							<BarChart data={patrolFreq}>
								<XAxis dataKey="name" stroke="#9ca3af" tick={{ fontSize: 12 }} />
								<YAxis allowDecimals={false} stroke="#9ca3af" tick={{ fontSize: 12 }} />
								<Tooltip contentStyle={{ background: "#0b1220", border: "1px solid rgba(255,255,255,0.1)", color: "white" }} />
								<Bar dataKey="value" fill="#22c55e" />
							</BarChart>
						</ResponsiveContainer>
					</div>
				</CardContent>
			</Card>
		</div>
	);
}
